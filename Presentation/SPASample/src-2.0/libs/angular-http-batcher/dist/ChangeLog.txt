12/10/2015 V1.12.0
Now handles multiple JSON Vulnerability Prefixes in same response
Add unique request part names to Content-Disposition header for use with tomcat servlet 3.1
Fix to stop multiple url encoding of query string parameters in http batch adapter

27/08/2015 V1.11.3
Fixed error when trimming response to protect against JSON vulnerability error (pr  by @magarcia https://github.com/magarcia)
Use encodeURI to process query strings with spaces and other such characters in default http adapter. (pr by https://github.com/tiwariarvin)

21/08/2015 V1.11.2
Fixed dist file build error.

11/08/2015 V1.11.1
Added support for the Angular Json protection vulnerability when parsing json (see https://docs.angularjs.org/api/ng/service/$http#json-vulnerability-protection)
thanks to @riann (https://github.com/riaann) for this!!
Added documentation for the new 'adapter' config property and tests around the node js multifetch adapter.

10/08/2015 V1.11.0
HUGE refactor of the library geared towards supporting multiple different formats of batch request and response i.e.
http 1.1 batch, NodeJS, Facebook etc.  The library now has the concept of batch adapters which are able to transform raw
http requests and responses into the correct batch formats for a particular server.
Added the default http 1.1 adapter which supports .net / java
Added a node js multifetch <https://github.com/debitoor/multifetch> adapter which supports fetch a batch of GET requests.

15/07/2015 V1.10.0
Added support for complex relative urls i.e. './api/products' or '../api/products'

15/07/2015 V1.9.0
A function can now be added to the config object to override the default mechanism used to determine if a call should be batched.
Add a canBatchRequest function to the config object which takes in a url and http method type and return true if the call can be batched.
Add the ability to specify additional header to be added to the batch request and each individual batch request part.  This is to improve
compatibly with java servlet <=3.1 where it needs a content disposition header to parse the request.

29/05/2015 V1.8.0
Fixed - Number of items in a request is one larger than maxBatchedRequestPerCall
Added the ability to send non-HTTPOnly cookies in each request segment in a batch request via the sendCookies flag on the
config object.
The batcher can now be disabled by setting the enabled config flag to false

16/03/2015 V1.7.0
Fixed issue with parsing the response string into a json object with having more than two dashes '--' in the returned data.

12/01/2015 V1.6.0
Added a flush method to the httpBatcher service which will immediately send all the pending batch requests regardless of batch quota or time limits being hit.

19/11/2014 V1.5.0
When batching requests that have request bodies, such as "POST" requests, the standard angular request transforms convert objects into json strings.
When angular-http-batcher calls angular.toJson again, we end up with a single json string, instead of a json encoding of the object in the batched request.
So remove this un-necessary call so a json encoding of the object is sent rather than a escaped json string to improve webAPI parameter binding.

So, instead of {"name":"John"} as the body of the request in the batch, you get "{\"name\":\"John\"}" - which causes the parameter binding in Web API to break.

19/11/2014 V1.4.0
The batch response parser can now handle multi-line json.

18/11/2014 V1.3.0
Fixed issue with relative urls

19/09/2014 V1.2.0
Fixed issue when {cache: true} on requests as the module was returning the headers as an object.  However, it the request is to be cache angular expects the headers to
be a string.

27/08/2014 V1.1.0
Fixed bug when a request hit the batch collection timeout and the request have not reached the min batch size the pending
request is not moved which forces other request to have sending delays.
